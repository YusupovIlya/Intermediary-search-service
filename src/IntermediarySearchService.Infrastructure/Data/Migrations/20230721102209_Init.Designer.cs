// <auto-generated />
using System;
using IntermediarySearchService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IntermediarySearchService.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230721102209_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IntermediarySearchService.Core.Entities.OfferAggregate.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("DeliveryCost")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("Expenses")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("ItemsTotalCost")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isSelected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("IntermediarySearchService.Core.Entities.OrderAggregate.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PerformerFee")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("SiteLink")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TrackCode")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<bool>("isBuyingByMyself")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("IntermediarySearchService.Core.Entities.OrderAggregate.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageLink")
                        .HasColumnType("text");

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductLink")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("Units")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("IntermediarySearchService.Core.Entities.OfferAggregate.Offer", b =>
                {
                    b.HasOne("IntermediarySearchService.Core.Entities.OrderAggregate.Order", null)
                        .WithMany("Offers")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("IntermediarySearchService.Core.Entities.OfferAggregate.StateOffer", "StatesOffer", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.Property<int>("State")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("StateOffer");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("StatesOffer");
                });

            modelBuilder.Entity("IntermediarySearchService.Core.Entities.OrderAggregate.Order", b =>
                {
                    b.OwnsOne("IntermediarySearchService.Core.Entities.OrderAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .HasColumnType("integer");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.OwnsMany("IntermediarySearchService.Core.Entities.OrderAggregate.StateOrder", "StatesOrder", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("Description")
                                .HasColumnType("text");

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.Property<int>("State")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("StateOrder");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("StatesOrder");
                });

            modelBuilder.Entity("IntermediarySearchService.Core.Entities.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("IntermediarySearchService.Core.Entities.OrderAggregate.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IntermediarySearchService.Core.Entities.OrderAggregate.Order", b =>
                {
                    b.Navigation("Offers");

                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
